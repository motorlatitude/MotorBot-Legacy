doctype html
html(lang="en")
    head
        title MotorBot Playlist
        //Mobile Web App Meta Tags
        link(rel="manifest", href="/manifest.json")
        meta(name="viewport", content="width=device-width,initial-scale=1.0,maximum-scale=1.0,minimum-scale=1.0,user-scalable=no")
        meta(name="mobile-web-app-capable", content="yes")
        meta(name="apple-mobile-web-app-capable", content="yes")
        meta(name="apple-mobile-web-app-status-bar-style", content="black")
        link(type='image/png', rel='icon', href='https://motorbot.io/motorbot_icon_128.png')
        link(href='/css/load.css', rel='stylesheet')
        script.
            function setUpWebSocketConnection(){
                socket = new WebSocket("wss://wss.lolstat.net")
                socket.onopen = function (event){
                    console.info("Connected to WS");
                    hb = setInterval(sendHB,5000);
                }

                socket.onmessage = function (event){
                    var data = JSON.parse(event.data)
                    //console.log(data)
                    if(data){
                        if(data.type == "trackAdded"){
                            if($("#playlist").length) {
                                if($("#playlist").attr("data-playlistId") == data.playlistId){
                                    playlistTracks[data.songId] = data;
                                    var trackNo = $("#playlist li").length;
                                    var formattedTimestamp = secondsToHms(data.duration)
                                    var added = "a few seconds ago"
                                    if (data.artwork != "" && !loadedPlaylistArtwork) {
                                        console.log("Using Artwork for track: " + i);
                                        $(".header .bg").attr("style", "background: url('" + data.artwork + "') no-repeat center; background-size: cover;");
                                        $(".header .artwork").attr("style", "background: url('" + data.artwork + "') no-repeat center; background-size: cover;");
                                        loadedPlaylistArtwork = true;
                                    }
                                    artist = data.artist.name || ""
                                    album = data.album.name || ""
                                    explicit = ""
                                    if (data.explicit) {
                                        explicit = "<div class='explicit'>E</div>";
                                    }
                                    $("#playlist").append("<li id='" + data.songId + "' data-songId='" + data.songId + "' data-playlistId='" + data.playlistId + "'><div class='trackRow'><div class='item' data-trackNo='" + trackNo + "'>" + trackNo + "</div><div class='title' data-sortIndex='" + data.title.toUpperCase() + "'>" + data.title + " " + explicit + "</div><div class='artist' data-sortIndex='" + artist.toUpperCase() + "'>" + artist + "</div><div class='album' data-sortIndex='" + album.toUpperCase() + "'>" + album + "</div><div class='timestamp' data-sortIndex='" + data.import_date + "'>" + added + "</div><div class='time'>" + formattedTimestamp + "</div></div></li>");
                                    updateDblClicks();
                                }
                                else{
                                    console.log("New Track Added, not in current playlist though");
                                }
                            }
                        }
                        else if(data.type == "trackDelete"){
                            if($("#playlist").length && $("#playlist").attr("data-playlistId") == data.playlistId){
                                $("#" + data.songId).remove();
                                $("#playlist li").each(function (i) {
                                    if (i > 0 && !$(this).hasClass("trackPlaying")) {
                                        $(this).children('.item').html(i);
                                    }
                                });
                                if (data.newAlbumArt) {
                                    $(".header .bg").attr("style", "background: url('" + data.newAlbumArt + "') no-repeat center; background-size: cover;");
                                    $(".header .artwork").attr("style", "background: url('" + data.newAlbumArt + "') no-repeat center; background-size: cover;");
                                    loadedPlaylistArtwork = true;
                                }
                                else if(data.newAlbumArt == ""){
                                    $(".header .bg").attr("style", "");
                                    $(".header .artwork").attr("style", "");
                                    loadedPlaylistArtwork = false;
                                }
                            }
                        }
                        else if(data.type == "randomUpdate"){
                            if (data.status) {
                                $(".random").addClass("active");
                                if ($("#nextSongsList").length) {
                                    $("#nextSongsList > li:not(.titleRow)").sort(function dec_sort(a, b) {
                                        return ($(b).attr("data-randId")) > ($(a).attr("data-randId")) ? 1 : -1;
                                    }).appendTo('#nextSongsList');
                                }
                            }
                            else{
                                $(".random").removeClass("active");
                                if ($("#nextSongsList").length) {
                                    $("#nextSongsList > li:not(.titleRow)").sort(function dec_sort(a, b) {
                                        return ($(b).attr("data-sortId")) > ($(a).attr("data-sortId")) ? 1 : -1;
                                    }).appendTo('#nextSongsList');
                                }
                            }
                        }
                        else{
                        }
                    }
                }
            }

            function getInformation(song_id){
                var song_info = playlistTracks[song_id]
                new SimpleBar($(".song_info_wrapper")[0]);
                $("#song_info").css("display","block");
                $(".song_info_raw").html("<pre>"+JSON.stringify(song_info, null, "    ")+"</pre>");
                $(".song_artwork").attr("style","background-image: url('"+song_info.artwork+"'); background-size: cover;");
                $(".song_title").html(song_info.title);
                $(".song_artist").html(song_info.artist.name);
                $(".song_album").html(song_info.album.name);
                $(".song_input_title").val(song_info.title);
                $(".song_input_artist").val(song_info.artist.name);
                $(".song_input_album").val(song_info.album.name);
            }

            function addSongToThisPlaylist(songId, playlistId){
                $.ajax({
                    method: "PATCH",
                    url: "/api/playlist/"+playlistId+"/song/"+songId+"?api_key=caf07b8b-366e-44ab-9bda-623f94a9c2df",
                    dataType: "json",
                    beforeSend: function (xhr) {
                        xhr.setRequestHeader("Authorization", "Bearer #{user.motorbotAccessToken}");
                    },
                    success: function (data){
                        $(".modalityOverlay").css("display", "none");
                        $(".modalFrame.addToPlaylist").css("display", "none");
                    },
                    error: function(err){
                        console.log(err);
                    }
                });
            }

            function addToPlaylist(songId){
                $(".modalityOverlay").css("display", "block");
                $(".modalFrame.addToPlaylist").css("display","block");
                $(".modal_playlistList").html("");
                $("#addToPlaylist_confirmNewPlaylistName").attr("data-songId","");
                $("#addToPlaylist_newPlaylistName").val("");
                $.ajax({
                    url: "/api/user/playlists?api_key=caf07b8b-366e-44ab-9bda-623f94a9c2df",
                    dataType: 'json',
                    beforeSend: function (xhr) {
                        xhr.setRequestHeader("Authorization", "Bearer #{user.motorbotAccessToken}");
                    },
                    success: function (data) {
                        $.each(data, function (i, item) {
                            if(item.creator.toString() == "#{user.id}") {
                                artwork = "";
                                if (item.artwork != "") {
                                    artwork = "background: url(\"" + item.artwork + "\") no-repeat center; background-size: cover;";
                                }
                                $(".modal_playlistList").append("<li onClick=\"addSongToThisPlaylist('"+songId+"','"+item.id+"')\"><div class='artwork' style='" + artwork + "'></div><div class='playlistName'>" + item.name + "</div></li>")
                                $("#addToPlaylist_confirmNewPlaylistName").attr("data-songId",songId)
                            }
                        });
                    },
                    error: function (err) {
                        console.log(err);
                    }
                });

            }

            function secondsToHms(d) {
                d = Number(d);
                var h = Math.floor(d / 3600);
                var m = Math.floor(d % 3600 / 60);
                var s = Math.floor(d % 3600 % 60);
                return ((h > 0 ? h + ":" + (m < 10 ? "0" : "") : "") + m + ":" + (s < 10 ? "0" : "") + s);
            }
    body
        .titlebar
            .motorbotIcon
                img(src="/img/motorbot_icon_50.png", srcset="/img/motorbot_icon_128.png 2x")
                .motorbot MotorBot
            input.search#motorbotsearch(type="text",placeholder="Search Something New...",onkeyup="loadView('search', $(this).val())")
            .searchIcon <i class="fa fa-search" aria-hidden="true"></i>
            .searchAutocomplete#searchAutocomplete
            .version
            .motorbotSelection
                .issue.button(onclick="window.location.href='https://github.com/motorlatitude/MotorBot/issues'") <i class="fas fa-bug"></i>
                .serverSelection(onclick="document.getElementById('channelOptions').classList.remove('visible'); document.getElementById('serverOptions').classList.toggle('visible'); document.getElementById('accountOptions').classList.remove('visible');")
                    .selected#selectedServer Kill The Jester
                    ul.options#serverOptions
                .channelSelection(onclick="document.getElementById('channelOptions').classList.toggle('visible'); document.getElementById('serverOptions').classList.remove('visible'); document.getElementById('accountOptions').classList.remove('visible');")
                    .selected.yellow#selectedChannel Disconnected
                    ul.options#channelOptions
            .profile(onclick="document.getElementById('channelOptions').classList.remove('visible'); document.getElementById('serverOptions').classList.remove('visible'); document.getElementById('accountOptions').classList.toggle('visible');")
                .profileArrow <i class="fas fa-chevron-down"></i>
                .profileIcon(style="background: url('https://cdn.discordapp.com/avatars/" + user.id + "/" + user.avatar + ".png?size=128') no-repeat center; background-size: cover;")
                .profileName #{user.username}<span class="disc">##{user.discriminator}</span><br /><span class="karma"><i class="fas fa-asterisk" aria-hidden="true"></i> &nbsp; #{user.karma} karma
                ul.options#accountOptions
                    li(data-view="account") <i class="fas fa-user-astronaut" aria-hidden="true"></i> &nbsp; &nbsp; Account
                    li(data-view="podcast") <i class="fas fa-podcast" aria-hidden="true"></i> &nbsp; &nbsp; Podcast Dashboard
                    li(data-view="developer") <i class="fas fa-wrench" aria-hidden="true"></i> &nbsp; &nbsp; Developer
                    li(onclick="window.location.href='https://motorbot.io/loginflow/logout'") <i class="fas fa-sign-out-alt" aria-hidden="true"></i> &nbsp; &nbsp; Logout
        .errorList
            ul#notificationsList
        .flexContainer
            .sidebar(data-simplebar)
                .scrollFader.top
                .scrollFader.bottom
                .title Main
                ul.mainNav
                    li(data-view="home").active Overview
                    li(data-view="browse") Browse
                    li(data-view="radio") Radio
                .title Library
                ul.mainNav
                    li(data-view="recently-played") Recently Played
                .title Playlists
                ul.mainNav.playlistNav#playlistNav
                .newPlaylistButton#newPlaylistButton New Playlist
            .contentView#ajax_contentView(data-simplebar)
                p
        .playerBar#pb
            .bg#pb_bg_artwork(style="")
            .downButton#mobile_pb_downButton <i class="fas fa-chevron-down" aria-hidden="true"></i>
            .controls
                .prev#playerBack <i class="fas fa-backward" aria-hidden="true"></i>
                .playStopButton <span id="playStop"><i class="fas fa-play" aria-hidden="true" onclick='playMusic();' style='cursor: pointer;'></i></span>
                .skip#playerSkip <i class="fas fa-forward" aria-hidden="true"></i>
            .activeArtwork#pb_artwork(style="")
            .duration#pb_duration 00:00 / 00:00
            .activeTrack
            .activeArtist
            .timelineWrapper
                .timeline#timelineBar
                .downloadtimeline#timelineDownloadBar
            .repeat <i class="fa fa-retweet" aria-hidden="true"></i>
            .random <i class="fa fa-random" aria-hidden="true"></i>
            .queue_button#queue_button <i class="fas fa-indent"></i>
        .mobileNavigation
            ul
                li <i class="fas fa-home" aria-hidden="true"></i>
                li <i class="fas fa-search" aria-hidden="true"></i>
                li <i class="fas fa-book-open" aria-hidden="true"></i>
        .contextMenu#contextMenu
            ul
        .loader#ajax_loader
            .spinner
        .modalityOverlay#modalityOverlay
        .loadingOverlay#loadingOverlay
            .loading
                .spinner
        #websocketDisconnectOverlay
            .icon <i class="fas fa-exclamation-triangle" aria-hidden="true"></i>
            .content
                .title Connection Closed
                .description You've been disconnected from the MotorBot server due to an internal error, we will try to re-establish your connection in 5 seconds.
        #newPlaylistModal.modal
            .playlist_art#newPlaylistModal_artwork <i class="fa fa-music" aria-hidden="true"></i><div class='edit_icon'><i class="fa fa-pencil-alt" aria-hidden="true"></i></div>
                input(type="file", name="artworkFile", id="newPlaylistArtworkFile")
            input.playlist_name_input(type="text", placeholder="Playlist Name")
            textarea.playlist_description_input(placeholder="Playlist Description")
            .newPlaylistModal_footer.modal_footer
                input.okay.newPlaylistButton_okay#newPlaylistButton_okay(type="button",value="Create")
                input.cancel.newPlaylistButton_cancel#newPlaylistButton_cancel(type="button", value="Cancel")
        #editPlaylistModal.modal
            .playlist_art <i class="fa fa-music" aria-hidden="true"></i><div class='edit_icon'><i class="fa fa-pencil-alt" aria-hidden="true"></i></div>
                form(method="POST", action="/api/playlist/uploadArtwork?api_key=caf07b8b-366e-44ab-9bda-623f94a9c2df", enctype="multipart/form-data", accept="image/*", id="editPlaylistArtworkUpload")
                    input(type="file", name="artworkFile")
            input.playlist_name_input(type="text", placeholder="Playlist Name")
            textarea.playlist_description_input(placeholder="Playlist Description")
            .newPlaylistModal_footer.modal_footer
                input.okay.editPlaylistButton_okay(type="button", value="Edit")
                input.cancel.editPlaylistButton_cancel(type="button", value="Cancel")
        input(id="store_userId", type="hidden", value=user.id)
        input(id="store_accessToken", type="hidden", value=user.motorbotAccessToken)
        noscript#deferred-styles
            link(href='/css/main.css', rel='stylesheet', id="mainstyle")
            link(href='/css/mobile.css', rel='stylesheet', id="mobilestyle")
            link(href="/css/fonts-ubuntu.min.css", rel="stylesheet")
            link(href='/css/fa/fontawesome.css', rel='stylesheet')
            link(href='/css/fa/solid.css', rel='stylesheet')
            link(href='/css/fa/regular.css', rel='stylesheet')
            link(href="/css/simplebar.min.css", rel="stylesheet")
            link(href="https://fonts.googleapis.com/css?family=Montserrat:400,500,600,700,800,900", rel="stylesheet")
        script.
            var loadDeferredStyles = function() {
                var addStylesNode = document.getElementById("deferred-styles");
                var replacement = document.createElement("div");
                replacement.innerHTML = addStylesNode.textContent;
                document.body.appendChild(replacement)
                addStylesNode.parentElement.removeChild(addStylesNode);
                var myStylesheet = document.querySelector('#mainstyle');
                myStylesheet.onload = function () {
                    document.getElementById("loadingOverlay").style.opacity = "0";
                    setTimeout(function () {
                        document.getElementById("loadingOverlay").style.display = "none";
                    }, 320)
                }
            };
            var raf = window.requestAnimationFrame || window.mozRequestAnimationFrame ||
                window.webkitRequestAnimationFrame || window.msRequestAnimationFrame;
            if (raf) raf(function() { window.setTimeout(loadDeferredStyles, 0); });
            else window.addEventListener('load', loadDeferredStyles);
        script(src="/scripts/app-built.min.js")