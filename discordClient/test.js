// Generated by CoffeeScript 1.10.0
(function() {
  var DiscordClient, dc, musicStream, soundboard, youtubeStream;

  DiscordClient = require('./discordClient.coffee');

  youtubeStream = require('ytdl-core');

  dc = new DiscordClient({
    token: "MTY5NTU0ODgyNjc0NTU2OTMw.CfAmNQ.WebsSsEexNlFWaNc2u54EP-hIX0"
  });

  dc.on("ready", function(msg) {
    return console.log("discordClient is ready and sending HB");
  });

  musicStream = null;

  soundboard = null;

  dc.on("message", function(msg, channel_id, user_id, raw) {
    var requestUrl, yStream;
    if (msg === "!v") {
      return dc.joinVoiceChannel("194904787924418561");
    } else if (msg === "!v leave") {
      return dc.leaveVoiceChannel("130734377066954752");
    } else if (msg === "!v play") {
      if (musicStream === null) {
        requestUrl = 'http://youtube.com/watch?v=bwmSjveL3Lc';
        yStream = youtubeStream(requestUrl, {
          quality: 'lowest',
          filter: 'audioonly'
        });
        yStream.on("error", function(e) {
          return console.log("Error Occured Loading Youtube Video");
        });
        return yStream.on("info", function(info, format) {
          musicStream = dc.internals.servers["130734377066954752"].voice.playFromStream(yStream);
          musicStream.on('ready', function() {
            return musicStream.play();
          });
          return musicStream.on("streamDone", function() {
            console.log("stream Done");
            return musicStream = null;
          });
        });
      } else {
        return musicStream.play();
      }
    } else if (msg === "!v stop") {
      return musicStream.stop();
    } else if (msg === "!v pause") {
      return musicStream.pause();
    } else if (msg === "!sb") {
      soundboard = dc.internals.servers["130734377066954752"].voice.playFromFile("/var/www/motorbot/soundboard/kled.mp3");
      soundboard.on('ready', function() {
        if (musicStream) {
          musicStream.pause();
          return musicStream.on("paused", function() {
            return soundboard.play();
          });
        } else {
          return soundboard.play();
        }
      });
      return soundboard.on('streamDone', function() {
        soundboard.destroy();
        soundboard = null;
        if (musicStream) {
          return musicStream.play();
        }
      });
    }
  });

  dc.connect();

}).call(this);

//# sourceMappingURL=test.js.map
